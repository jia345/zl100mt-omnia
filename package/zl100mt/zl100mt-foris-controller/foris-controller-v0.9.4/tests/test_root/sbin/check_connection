#!/bin/sh
set -e

# IP addresses and DNS names we are testing against
IP4='217.31.205.50 198.41.0.4 199.7.83.42 8.8.8.8'
IP6='2001:1488:0:3::2 2001:500:3::42 2001:500:2d::d 2606:2800:220:6d:26bf:1447:1097:aa7'
NAMES='api.turris.cz www.nic.cz c.root-servers.net'
BAD_NAMES='www.rhybar.cz'

# Runs multiple tests on given function. It runs given function for every argument
# following it. If at least half of them passes then we evaluate it as positive
# test. This is because we expect that some servers might be dead.
do_tests_positive() {
	local FUNC=$1
	shift
	local RES=0
	for D in "$@"; do
		if $FUNC "$D"; then
			RES=$((( $RES + 1 )))
			echo "OK" >&2
		else
			echo "FAILED" >&2
		fi
	done
	[ $RES -gt $((( $# / 2 ))) ]
}

# We want all of these tests to fail otherwise something is broken.
do_tests_negative() {
	local FUNC=$1
	local FAIL=0
	shift
	for D in "$@"; do
		if $FUNC "$D"; then
			FAIL=1
			echo "FAILED" >&2
		else
			echo "OK" >&2
		fi
	done
	return $FAIL
}

# Check if we can ping address (passed as first argument).
ping_ip() {
	echo -n "Pinging $1 ... " >&2
	$2 -c 1 -w 8 "$1" >/dev/null 2>&1
}
ping_ip4() {
	ping_ip $1 ping
}
ping_ip6() {
	ping_ip $1 ping6
}

# Check if name that is passed as first argument can be resolved
dig_name() {
	echo -n "Resolving $1 ... " >&2
	nslookup "$1" >/dev/null 2>&1
}

echo_res() {
	echo -n "$2: "
	$1 && echo "OK" || echo "FAILED"
}

defgw() {
	awk '/^default/ {
		for (col=1; col<=NF; col++) {
			if ($col == "via")
				gateway = $(col + 1)
			if ( $col == "dev" )
				device = $(col + 1)
		}
		if (gateway ~ /^fe80:/) {
			print gateway "%" device
		} else {
			print gateway
		}
	}' | sort -u
}

GW4="$(ip -4 route | defgw)"
GW6="$(ip -6 route | defgw)"

# Results
RES_IP4_G=false
RES_IP4=false
RES_IP6_G=false
RES_IP6=false
RES_DNS=false
RES_DNSSEC=false

# IPv4 gateway
do_tests_positive ping_ip4 $GW4 && RES_IP4_G=true || :
echo_res $RES_IP4_G "IPv4 Gateway"
# IPv4
if $RES_IP4_G; then
	do_tests_positive ping_ip4 $IP4 && RES_IP4=true || :
fi
echo_res $RES_IP4 "IPv4"

# IPv6 gateway
do_tests_positive ping_ip6 $GW6 && RES_IP6_G=true || :
echo_res $RES_IP6_G "IPv6 Gateway"
# IPv6
if $RES_IP6_G; then
	do_tests_positive ping_ip6 $IP6 && RES_IP6=true || :
fi
echo_res $RES_IP6 "IPv6"

# DNS
if $RES_IP4 || $RES_IP6; then
	do_tests_positive dig_name $NAMES && RES_DNS=true || :
fi
echo_res $RES_DNS "DNS"
# DNSSEC
if $RES_DNS; then
	# Bad names shouldn't be resolved
	do_tests_negative dig_name $BAD_NAMES && RES_DNSSEC=true || :
fi
echo_res $RES_DNSSEC "DNSSEC"
